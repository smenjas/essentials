#!/usr/bin/env bash

# Set up a BLT-based Drupal project to use Heroku.
#
# See: https://devcenter.heroku.com/articles/getting-started-with-php

release_branch="main"
heroku_remote="heroku"
docroot="docroot" # This is what BLT uses.

# Check dependencies.
if [ ! "$(which php)" ]; then
    >&2 echo "fatal: php command not found"
    exit 1
fi
if [ ! "$(which composer)" ]; then
    >&2 echo "fatal: composer command not found"
    exit 2
fi
if [ ! "$(which heroku)" ]; then
    >&2 echo "fatal: heroku command not found"
    exit 3
fi

# Authenticate
heroku login || {
    >&2 echo "fatal: heroku login failed"
    exit 4
}

# From here on commands are project specific.
if [ ! "$(git status 2>/dev/null)" ]; then
    >&2 echo "fatal: this is not a git repository"
    exit 5
fi

repo_root="$(git rev-parse --show-toplevel)"
cd "$repo_root"

if [ ! "$(git remote | grep "$heroku_remote")" ]; then
    heroku create "$project"
fi

git push "$heroku_remote" "$release_branch"
heroku ps:scale web=1
heroku open
heroku logs # --tail
composer require --dev heroku/heroku-buildpack-php
git add composer.*
git commit -m "Add heroku-buildpack-php."

if [ ! -e Procfile ]; then
    echo "web: vendor/bin/heroku-php-apache2 $docroot/" > Procfile
fi

# Make logs persistent.
heroku addons:create papertrail

# Install a MySQL database.
heroku addons:create cleardb

db_url="$(heroku config | grep CLEARDB_DATABASE_URL | cut -d ' ' -f 2)"

heroku config:set DATABASE_URL="$db_url"
